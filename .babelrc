{
  "presets": [
    // ["minify"],
    // 为了避免 import x from 'foo' 被 babel 转换为 require，我们需要在 .babelrc 的 presets 配置中标明 "modules": false：
    ["env", {
      "modules": false,
      "node": "current",
      "targets": {
        "safari": 9,
        "chrome": "56",
        "browsers": ["> 1%", "last 5 versions", "not ie <= 8"]
      }
    }]
  ],
  "comments": false,
  "plugins": [
    // 安装 babel-plugin-import 插件
    // ["import", { "libraryName": "kit-ui", "style": true }],
    // babel-plugin-module-resolver 是一个Babel模块解析插件, 在.babelrc中可以配置模块的导入搜索路径
    // babel对于 export default {} 支持不好
    // 需要插件 babel-plugin-add-module-exports：
    // "add-module-exports",
    "syntax-dynamic-import", // 动态解析 import()，实现路由懒加载
    // "syntax-flow", // 支持解析 flow
    // "syntax-jsx",  // 支持解析 jsx
    // stage-0, state-1, stage-2以及stage-3的区别
    // http://www.cnblogs.com/chris-oil/p/5717544.html
    // "transform-class-properties",
    // "transform-decorators-legacy",  // vue-class-component
    "transform-object-rest-spread", // 支持对象解构赋值
    "transform-vue-jsx",  // 支持 vue 直接 render JSX 语法
    // transform-runtime 只会对es6的语法进行转换，而不会对新api进行转换。
    // 如果需要转换新api，就要引入babel-polyfill
    "transform-runtime"
  ],
  "env": {
    "test": {
      "presets": ["env", "stage-2"],
      "plugins": [ "istanbul" ]
    }
  }
}
